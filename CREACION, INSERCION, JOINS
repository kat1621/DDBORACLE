-- Crear tabla Categorias
CREATE TABLE Categorias (
    ID_Categoria INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    Nombre_Cat VARCHAR2(50) NOT NULL,
    Descripcion VARCHAR2(200)
);

-- Crear tabla Roles
CREATE TABLE Roles (
    ID_Rol INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    Nombre VARCHAR2(50) NOT NULL,
    Cargo VARCHAR2(50) NOT NULL
);

-- Crear tabla Sucursales
CREATE TABLE Sucursales (
    ID_Sucursal INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    Nombre VARCHAR2(50) NOT NULL,
    Pais VARCHAR2(50) NOT NULL,
    Ciudad VARCHAR2(50) NOT NULL,
    Dirección VARCHAR2(100) NOT NULL
);

-- Crear tabla Clientes
CREATE TABLE Clientes (
    ID_Cliente INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    Nombre VARCHAR2(50) NOT NULL,
    Apellido VARCHAR2(50) NOT NULL,
    Num_tel VARCHAR2(20),
    Dirección VARCHAR2(100)
);

-- Crear tabla Empleados
CREATE TABLE Empleados (
    ID_Empleado INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    Nombre VARCHAR2(50) NOT NULL,
    Apellido VARCHAR2(50) NOT NULL,
    Telefono VARCHAR2(20),
    Email VARCHAR2(50),
    Puesto VARCHAR2(50) NOT NULL
);

-- Crear tabla Proveedores
CREATE TABLE Proveedores (
    ID_Proveedor INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    Nombre VARCHAR2(50) NOT NULL,
    Telefono VARCHAR2(20),
    Email VARCHAR2(50),
    Dirección VARCHAR2(100),
    Pais VARCHAR2(50)
);

-- Crear tabla Productos
CREATE TABLE Productos (
    ID_Producto INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    Nombre VARCHAR2(50) NOT NULL,
    Descripcion VARCHAR2(200),
    ID_Categoria INT NOT NULL,
    CONSTRAINT FK_Categoria FOREIGN KEY (ID_Categoria) REFERENCES Categorias(ID_Categoria)
);

-- Crear tabla Descuentos
CREATE TABLE Descuentos (
    ID_Descuento INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    FechaInicio DATE NOT NULL,
    FechaFin DATE NOT NULL,
    Porcentaje DECIMAL(5, 2),
    Descripcion VARCHAR2(200)
);

-- Crear tabla Usuarios
CREATE TABLE Usuarios (
    ID_Usuario INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    Nombre VARCHAR2(50) NOT NULL,
    Contraseña VARCHAR2(100) NOT NULL, -- Incremento el tamaño para acomodar contraseñas cifradas
    ID_Empleado INT NOT NULL,
    ID_Rol INT NOT NULL,
    CONSTRAINT FK_Empleado FOREIGN KEY (ID_Empleado) REFERENCES Empleados(ID_Empleado),
    CONSTRAINT FK_Rol FOREIGN KEY (ID_Rol) REFERENCES Roles(ID_Rol)
);

-- Crear tabla Pedidos
CREATE TABLE Pedidos (
    ID_Pedido INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    ID_Cliente INT NOT NULL,
    Fecha DATE NOT NULL,
    Total DECIMAL(10, 2),
    CONSTRAINT FK_Cliente FOREIGN KEY (ID_Cliente) REFERENCES Clientes(ID_Cliente)
);

-- Crear tabla Detalle_Pedido
CREATE TABLE Detalle_Pedido (
    ID_Detalle INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    ID_Pedido INT NOT NULL,
    ID_Producto INT NOT NULL,
    Cantidad INT NOT NULL,
    Precio_Unit DECIMAL(10, 2),
    CONSTRAINT FK_Pedido FOREIGN KEY (ID_Pedido) REFERENCES Pedidos(ID_Pedido),
    CONSTRAINT FK_Producto FOREIGN KEY (ID_Producto) REFERENCES Productos(ID_Producto)
);

-- Crear tabla Pago
CREATE TABLE Pago (
    ID_Pago INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    ID_Pedido INT NOT NULL,
    Fecha DATE NOT NULL,
    Total DECIMAL(10, 2),
    Estado VARCHAR2(20),
    CONSTRAINT FK_Pedido_Pago FOREIGN KEY (ID_Pedido) REFERENCES Pedidos(ID_Pedido)
);

-- Crear tabla Inventario
CREATE TABLE Inventario (
    ID_Inventario INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    TipoMovimiento VARCHAR2(20),
    Fecha DATE NOT NULL,
    ID_Producto INT NOT NULL,
    Cantidad INT NOT NULL,
    CONSTRAINT FK_Producto_Inventario FOREIGN KEY (ID_Producto) REFERENCES Productos(ID_Producto)
);

-- Crear tabla Historial_Precios
CREATE TABLE Historial_Precios (
    ID_Historial INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    ID_Producto INT NOT NULL,
    Precio_anterior DECIMAL(10, 2),
    Precio_nuevo DECIMAL(10, 2),
    Fecha_Cambio DATE NOT NULL,
    CONSTRAINT FK_Producto_Historial FOREIGN KEY (ID_Producto) REFERENCES Productos(ID_Producto)
);

-- Crear tabla Descuentos_Productos
CREATE TABLE Descuentos_Productos (
    ID_Producto INT NOT NULL,
    ID_Descuento INT NOT NULL,
    CONSTRAINT PK_Descuentos_Productos PRIMARY KEY (ID_Producto, ID_Descuento),
    CONSTRAINT FK_Producto_Descuento FOREIGN KEY (ID_Producto) REFERENCES Productos(ID_Producto),
    CONSTRAINT FK_Descuento_Producto FOREIGN KEY (ID_Descuento) REFERENCES Descuentos(ID_Descuento)
);





-- Insertar datos en la tabla Categorias
INSERT INTO Categorias (Nombre_Cat, Descripcion) VALUES ('Electrónica', 'Productos electrónicos y gadgets');
INSERT INTO Categorias (Nombre_Cat, Descripcion) VALUES ('Hogar', 'Artículos para el hogar');

select*from Categorias;

-- Insertar datos en la tabla Roles
INSERT INTO Roles (Nombre, Cargo) VALUES ('Admin', 'Administrador del sistema');
INSERT INTO Roles (Nombre, Cargo) VALUES ('Vendedor', 'Empleado de ventas');

select*from Roles;

-- Insertar datos en la tabla Sucursales
INSERT INTO Sucursales (Nombre, Pais, Ciudad, Dirección) VALUES ('Sucursal Central', 'España', 'Madrid', 'Calle Mayor 123');
INSERT INTO Sucursales (Nombre, Pais, Ciudad, Dirección) VALUES ('Sucursal Norte', 'España', 'Barcelona', 'Calle Gran Via 456');

select*from Sucursales;

-- Insertar datos en la tabla Clientes
INSERT INTO Clientes (Nombre, Apellido, Num_tel, Dirección) VALUES ('Juan', 'Pérez', '123456789', 'Calle Falsa 123');
INSERT INTO Clientes (Nombre, Apellido, Num_tel, Dirección) VALUES ('Ana', 'Gómez', '987654321', 'Avenida Siempre Viva 742');

select*from Clientes;

-- Insertar datos en la tabla Empleados
INSERT INTO Empleados (Nombre, Apellido, Telefono, Email, Puesto) VALUES ('Carlos', 'Ramírez', '555123456', 'carlos@example.com', 'Gerente');
INSERT INTO Empleados (Nombre, Apellido, Telefono, Email, Puesto) VALUES ('María', 'López', '555987654', 'maria@example.com', 'Cajera');

select*from Empleados;

-- Insertar datos en la tabla Proveedores
INSERT INTO Proveedores (Nombre, Telefono, Email, Dirección, Pais) VALUES ('Proveedor A', '555111222', 'contactoA@example.com', 'Calle Industria 101', 'España');
INSERT INTO Proveedores (Nombre, Telefono, Email, Dirección, Pais) VALUES ('Proveedor B', '555333444', 'contactoB@example.com', 'Avenida Comercio 202', 'Portugal');

select*from Proveedores;

-- Insertar datos en la tabla Productos (asumiendo que los IDs de categorías son 1 y 2)
INSERT INTO Productos (Nombre, Descripcion, ID_Categoria) VALUES ('Televisor 4K', 'Televisor de alta definición', 1);
INSERT INTO Productos (Nombre, Descripcion, ID_Categoria) VALUES ('Aspiradora', 'Aspiradora de alta potencia', 2);

select*from Productos;

-- Insertar datos en la tabla Descuentos
INSERT INTO Descuentos (FechaInicio, FechaFin, Porcentaje, Descripcion) VALUES (TO_DATE('2023-01-01', 'YYYY-MM-DD'), TO_DATE('2023-12-31', 'YYYY-MM-DD'), 10.00, 'Descuento de año nuevo');
INSERT INTO Descuentos (FechaInicio, FechaFin, Porcentaje, Descripcion) VALUES (TO_DATE('2023-06-01', 'YYYY-MM-DD'), TO_DATE('2023-06-30', 'YYYY-MM-DD'), 15.00, 'Descuento de verano');

select*from Descuentos;

-- Insertar datos en la tabla Usuarios (asumiendo que los IDs de empleados son 1 y 2, y los IDs de roles son 1 y 2)
INSERT INTO Usuarios (Nombre, Contraseña, ID_Empleado, ID_Rol) VALUES ('admin', 'admin123', 1, 1);
INSERT INTO Usuarios (Nombre, Contraseña, ID_Empleado, ID_Rol) VALUES ('vendedor1', 'vendedor123', 2, 2);

select*from Usuarios;

-- Insertar datos en la tabla Pedidos (asumiendo que los IDs de clientes son 1 y 2)
INSERT INTO Pedidos (ID_Cliente, Fecha, Total) VALUES (1, TO_DATE('2023-06-01', 'YYYY-MM-DD'), 299.99);
INSERT INTO Pedidos (ID_Cliente, Fecha, Total) VALUES (2, TO_DATE('2023-06-02', 'YYYY-MM-DD'), 499.99);

select*from Pedidos;

-- Insertar datos en la tabla Detalle_Pedido (asumiendo que los IDs de pedidos son 1 y 2, y los IDs de productos son 1 y 2)
INSERT INTO Detalle_Pedido (ID_Pedido, ID_Producto, Cantidad, Precio_Unit) VALUES (1, 1, 1, 299.99);
INSERT INTO Detalle_Pedido (ID_Pedido, ID_Producto, Cantidad, Precio_Unit) VALUES (2, 2, 1, 499.99);

select*from Detalle_Pedido;

-- Insertar datos en la tabla Pago (asumiendo que los IDs de pedidos son 1 y 2)
INSERT INTO Pago (ID_Pedido, Fecha, Total, Estado) VALUES (1, TO_DATE('2023-06-01', 'YYYY-MM-DD'), 299.99, 'Completado');
INSERT INTO Pago (ID_Pedido, Fecha, Total, Estado) VALUES (2, TO_DATE('2023-06-02', 'YYYY-MM-DD'), 499.99, 'Pendiente');

select*from Pago;

-- Insertar datos en la tabla Inventario (asumiendo que los IDs de productos son 1 y 2)
INSERT INTO Inventario (TipoMovimiento, Fecha, ID_Producto, Cantidad) VALUES ('Entrada', TO_DATE('2023-05-01', 'YYYY-MM-DD'), 1, 50);
INSERT INTO Inventario (TipoMovimiento, Fecha, ID_Producto, Cantidad) VALUES ('Salida', TO_DATE('2023-06-01', 'YYYY-MM-DD'), 1, 1);

select*from Inventario;

-- Insertar datos en la tabla Historial_Precios (asumiendo que los IDs de productos son 1 y 2)
INSERT INTO Historial_Precios (ID_Producto, Precio_anterior, Precio_nuevo, Fecha_Cambio) VALUES (1, 299.99, 279.99, TO_DATE('2023-05-01', 'YYYY-MM-DD'));
INSERT INTO Historial_Precios (ID_Producto, Precio_anterior, Precio_nuevo, Fecha_Cambio) VALUES (2, 499.99, 479.99, TO_DATE('2023-05-01', 'YYYY-MM-DD'));

select*from Historial_Precios;

-- Insertar datos en la tabla Descuentos_Productos (asumiendo que los IDs de productos son 1 y 2, y los IDs de descuentos son 1 y 2)
INSERT INTO Descuentos_Productos (ID_Producto, ID_Descuento) VALUES (1, 1);
INSERT INTO Descuentos_Productos (ID_Producto, ID_Descuento) VALUES (2, 2);

select*from Descuentos_Productos;

SELECT p.ID_Producto, p.Nombre AS Producto, c.Nombre_Cat AS Categoria
FROM Productos p
JOIN Categorias c ON p.ID_Categoria = c.ID_Categoria;

SELECT u.ID_Usuario, u.Nombre AS Usuario, e.Nombre AS Empleado, e.Apellido, r.Nombre AS Rol
FROM Usuarios u
JOIN Empleados e ON u.ID_Empleado = e.ID_Empleado
JOIN Roles r ON u.ID_Rol = r.ID_Rol;

SELECT p.ID_Pedido, p.Fecha, p.Total, c.Nombre AS Cliente, c.Apellido
FROM Pedidos p
JOIN Clientes c ON p.ID_Cliente = c.ID_Cliente;

SELECT dp.ID_Detalle, dp.Cantidad, dp.Precio_Unit, pe.Fecha, pe.Total, pr.Nombre AS Producto
FROM Detalle_Pedido dp
JOIN Pedidos pe ON dp.ID_Pedido = pe.ID_Pedido
JOIN Productos pr ON dp.ID_Producto = pr.ID_Producto;
--Revisar si se puede cambiar el orden para que el producto salga al principio

SELECT i.ID_Inventario, i.TipoMovimiento, i.Fecha, i.Cantidad, p.Nombre AS Producto
FROM Inventario i
JOIN Productos p ON i.ID_Producto = p.ID_Producto;

SELECT h.ID_Historial, h.Precio_anterior, h.Precio_nuevo, h.Fecha_Cambio, p.Nombre AS Producto
FROM Historial_Precios h
JOIN Productos p ON h.ID_Producto = p.ID_Producto;

SELECT dp.ID_Producto, dp.ID_Descuento, p.Nombre AS Producto, d.Porcentaje, d.Descripcion
FROM Descuentos_Productos dp
JOIN Productos p ON dp.ID_Producto = p.ID_Producto
JOIN Descuentos d ON dp.ID_Descuento = d.ID_Descuento;

SELECT pa.ID_Pago, pa.Fecha, pa.Total, pa.Estado, pe.ID_Pedido
FROM Pago pa
JOIN Pedidos pe ON pa.ID_Pedido = pe.ID_Pedido;
